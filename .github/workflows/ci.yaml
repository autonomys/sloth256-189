name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2022
        rust:
          - stable

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose
  cuda:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
        rust:
          - stable

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      # Workaround as the newest version of MSVC does not support this latest version of CUDA, workaround for Windows 11/Windows Server 2022.
      - name: Add MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.29
        if: matrix.os == 'windows-2022'

      - name: CUDA toolchain
        uses: Jimver/cuda-toolkit@v0.2.5
        if: runner.os == 'Linux' || runner.os == 'Windows'

      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features=cuda -- -D warnings

      # We can't run CUDA tests in CI yet, so just test the build for now
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --features=cuda --verbose
