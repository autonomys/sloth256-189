name: CI

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macos-11
          - windows-2022
        rust:
          - stable

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}

      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose

  cuda-opencl:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
        rust:
          - stable

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: CUDA toolchain
        uses: Jimver/cuda-toolkit@v0.2.6
        if: runner.os == 'Linux' || runner.os == 'Windows'

      - name: OpenCL headers on Linux
        run: |
          sudo apt-get install -y --no-install-recommends opencl-headers
        if: runner.os == 'Linux'

      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}-cuda

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --features=opencl -- -D warnings

      # We can't run CUDA tests in CI yet, so just test the build for now
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --features=opencl --verbose

  wasm:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        rust:
          - stable

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy

      - name: Configure cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ matrix.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.toml') }}-wasm

      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --no-default-features -- -D warnings

      # Tests are not runnable as is for Wasm, so just build it
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --no-default-features --verbose
